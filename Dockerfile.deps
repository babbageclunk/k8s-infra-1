FROM buildpack-deps:bionic
MAINTAINER "Denver Williams <denver@debian.nz>"


# Kubespray deps
RUN set -ex; \
	apt-get update; \
	apt-get install -y \
  libssl-dev \
  python3-dev \
  sshpass \
  apt-transport-https \
  jq \
  ca-certificates \
  curl \
  gnupg2 \
  software-properties-common \
  python3-pip \
  rsync
  
  

# Golang
RUN wget -O go.tgz https://golang.org/dl/go1.13.1.linux-amd64.tar.gz \
   && tar -C /usr/local -xzf go.tgz \
   && rm go.tgz \
   && export PATH="/usr/local/go/bin:$PATH" \
   && go version

ENV GOPATH /go
ENV PATH $GOPATH/bin:/usr/local/go/bin:$PATH

RUN mkdir -p "$GOPATH/src" "$GOPATH/bin" && chmod -R 777 "$GOPATH"

# Ruby

# skip installing gem documentation
RUN mkdir -p /usr/local/etc \
			&& { \
				echo 'install: --no-document'; \
					echo 'update: --no-document'; \
			} >> /usr/local/etc/gemrc


ENV RUBY_DOWNLOAD_SHA256 11a83f85c03d3f0fc9b8a9b6cad1b2674f26c5aaa43ba858d4b0fcc2b54171e1
ENV RUBY_MAJOR 2.6
ENV RUBY_VERSION 2.6.3
ENV RUBYGEMS_VERSION 3.0.3 
ENV BUNDLER_VERSION 2.0.1 

# some of ruby's build scripts are written in ruby
#   we purge system ruby later to make sure our final image uses what we just built
RUN set -ex \
			\
			&& buildDeps=' \
			bison \
			dpkg-dev \
			libgdbm-dev \
# ruby 2.3 on stretch can only support libssl1.0-dev (libssl dev from buildpack-deps is 1.1.x)
			libssl1.0-dev \
				ruby \
				' \
				&& apt-get update \
				&& apt-get install -y --no-install-recommends $buildDeps \
				&& rm -rf /var/lib/apt/lists/* \
																			 \
																			 && wget -O ruby.tar.xz "https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR%-rc}/ruby-$RUBY_VERSION.tar.xz" \
                                       && echo "$RUBY_DOWNLOAD_SHA256 *ruby.tar.xz" | sha256sum -c - \
																			 \
																			 && mkdir -p /usr/src/ruby \
																			 && tar -xJf ruby.tar.xz -C /usr/src/ruby --strip-components=1 \
																			 && rm ruby.tar.xz \
																			 \
																			 && cd /usr/src/ruby \
																			 \
# hack in "ENABLE_PATH_CHECK" disabling to suppress:
#   warning: Insecure world writable dir
&& { \
echo '#define ENABLE_PATH_CHECK 0'; \
echo; \
cat file.c; \
} > file.c.new \
&& mv file.c.new file.c \
\
&& autoconf \
&& gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \
&& ./configure \
--build="$gnuArch" \
--disable-install-doc \
--enable-shared \
&& make -j "$(nproc)" \
&& make install \
\
&& apt-get purge -y --auto-remove $buildDeps \
&& cd / \
&& rm -r /usr/src/ruby \
\
&& gem update --system "$RUBYGEMS_VERSION" \
&& gem install bundler --version "$BUNDLER_VERSION" --force \
&& rm -r /root/.gem/

# install things globally, for great justice
# and don't create ".bundle" in all our apps
ENV GEM_HOME /usr/local/bundle
ENV BUNDLE_PATH="$GEM_HOME" \
BUNDLE_SILENCE_ROOT_WARNING=1 \
BUNDLE_APP_CONFIG="$GEM_HOME"
# path recommendation: https://github.com/bundler/bundler/pull/6469#issuecomment-383235438
ENV PATH $GEM_HOME/bin:$BUNDLE_PATH/gems/bin:$PATH
# adjust permissions of a few directories for running "gem install" as an arbitrary user
RUN mkdir -p "$GEM_HOME" && chmod 777 "$GEM_HOME"
# (BUNDLE_PATH = GEM_HOME, no need to mkdir/chown both)


# Docker
# RUN curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add - && \
#      add-apt-repository \
#      "deb [arch=amd64] https://download.docker.com/linux/ubuntu \
#      $(lsb_release -cs) \
#      stable" \
#      && apt update -y && apt-get install docker-ce -y

# Helm 
ARG VERSION=v2.14.3
ARG FILENAME=helm-${VERSION}-linux-amd64.tar.gz
RUN curl -L http://storage.googleapis.com/kubernetes-helm/${FILENAME} | tar zxv -C /tmp
RUN mv /tmp/linux-amd64/helm /usr/local/bin/

# Kubectl
RUN curl -LO https://storage.googleapis.com/kubernetes-release/release/v1.14.4/bin/linux/amd64/kubectl \
    && chmod a+x kubectl && cp kubectl /usr/local/bin/kubectl